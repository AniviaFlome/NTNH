name: Build NTNH Packages

on:
  workflow_dispatch:
    inputs:
      output:
        type: choice
        required: true
        description: "Which one do you want to build?"
        options:
          - "artifact"
          - "release"
      lwjgl3ify:
        description: 'Do you want to build lwjfl3ify package?'
        required: true
        type: boolean
        default: true
      prism:
        description: 'Do you want to build prism package?'
        required: true
        type: boolean
        default: true
      curseforge:
        description: 'Do you want to build curseforge package?'
        required: true
        type: boolean
        default: true
      modrinth:
        description: 'Do you want to build modritnh package?'
        required: true
        type: boolean
        default: true
      release_version:
        description: 'Release Version'
        required: true
        type: string

jobs:
  package:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          path: ntnh
          ref: main

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "21"
          java-package: "jre"

      - uses: actions/setup-go@v5
        with:
          cache: "false"
          go-version: 'stable'

      - name: Install packwiz
        run: go install github.com/packwiz/packwiz@latest

      - name: Run lwjgl3ify Script
        if: github.event.inputs.lwjgl3ify == 'true'
        run: |
          version=$(curl -s https://api.github.com/repos/GTNewHorizons/lwjgl3ify/releases/latest | jq -r .tag_name)
          zip_url="https://github.com/GTNewHorizons/lwjgl3ify/releases/download/${version}/lwjgl3ify-$version-multimc.zip"
          jar_url="https://github.com/GTNewHorizons/lwjgl3ify/releases/download/${version}/lwjgl3ify-$version.jar"
          pack_url="https://github.com/packwiz/packwiz-installer-bootstrap/releases/latest/download/packwiz-installer-bootstrap.jar"

          curl -L "$zip_url" -o "lwjgl3ify-${version}-multimc.zip" 
          unzip -q "lwjgl3ify-${version}-multimc.zip" -d lwjgl3ify-multimc
          curl -L "$jar_url" -o "lwjgl3ify-${version}.jar"

          mkdir -p modpack-lwjgl3ify/.minecraft/mods
          cp -r ntnh/* modpack-lwjgl3ify/.minecraft/

          printf "
          [General]
          iconKey=default
          InstanceType=OneSix
          " > modpack-lwjgl3ify/instance.cfg

          cp -r lwjgl3ify-multimc/patches modpack-lwjgl3ify/
          cp -r lwjgl3ify-multimc/libraries modpack-lwjgl3ify/
          cp -r lwjgl3ify-multimc/mmc-pack.json modpack-lwjgl3ify/
          cp -r "lwjgl3ify-${version}.jar" modpack-lwjgl3ify/.minecraft/mods/

          curl -L "$pack_url" -o "packwiz-installer-bootstrap.jar"
          java -jar packwiz-installer-bootstrap.jar modpack-lwjgl3ify/.minecraft/pack.toml -g
          rm -r modpack-lwjgl3ify/.minecraft/mods/* modpack-lwjgl3ify/.minecraft/pack.toml modpack-lwjgl3ify/.minecraft/index.toml
          cp -r mods/* modpack-lwjgl3ify/.minecraft/mods/

      - name: Run Prism Script
        if: github.event.inputs.prism == 'true'
        run: |
          pack_url="https://github.com/packwiz/packwiz-installer-bootstrap/releases/latest/download/packwiz-installer-bootstrap.jar"

          mkdir -p modpack-prism/.minecraft/mods
          cp -r ntnh/* modpack-prism/.minecraft/

          printf "
          [General]
          iconKey=default
          InstanceType=OneSix
          " > modpack-prism/instance.cfg

          printf '
          {
          "components": [
              {
              "important": true,
              "uid": "net.minecraft",
              "version": "1.7.10"
              },
              {
              "uid": "net.minecraftforge",
              "version": "10.13.4.1614"
              }
          ],
          "formatVersion": 1
          }
          ' > modpack-prism/mmc-pack.json

          curl -L "$pack_url" -o "packwiz-installer-bootstrap.jar"
          java -jar packwiz-installer-bootstrap.jar modpack-prism/.minecraft/pack.toml -g
          rm -r modpack-prism/.minecraft/mods/* modpack-prism/.minecraft/pack.toml modpack-prism/.minecraft/index.toml
          cp -r mods/* modpack-prism/.minecraft/mods/

      - name: Run Curseforge Script
        if: github.event.inputs.curseforge == 'true'
        run: |
          packwiz refresh --pack-file ntnh/pack.toml
          packwiz cf export -y --pack-file ntnh/pack.toml -o NTNH-${{ github.event.inputs.release_version }}-Curseforge.zip
          unzip NTNH-${{ github.event.inputs.release_version }}-Curseforge.zip -d ./NTNH-${{ github.event.inputs.release_version }}-Curseforge

      - name: Run Modrinth Script
        if: github.event.inputs.curseforge == 'true'
        run: |
          packwiz refresh --pack-file ntnh/pack.toml
          packwiz mr export -y --pack-file ntnh/pack.toml -o NTNH-${{ github.event.inputs.release_version }}-Modrinth.mrpack

      - name: Upload lwjgl3ify Artifact
        if: github.event.inputs.lwjgl3ify == 'true' && github.event.inputs.output == 'artifact'
        uses: actions/upload-artifact@v4
        with:
          name: NTNH-${{ github.event.inputs.release_version }}-lwjgl3ify
          path: modpack-lwjgl3ify
          include-hidden-files: true

      - name: Upload Prism Artifact
        if: github.event.inputs.prism == 'true' && github.event.inputs.output == 'artifact'
        uses: actions/upload-artifact@v4
        with:
          name: NTNH-${{ github.event.inputs.release_version }}-MMC_Prism
          path: modpack-prism
          include-hidden-files: true

      - name: Upload Curseforge Artifact
        if: github.event.inputs.curseforge == 'true' && github.event.inputs.output == 'artifact'
        uses: actions/upload-artifact@v4
        with:
          name: NTNH-${{ github.event.inputs.release_version }}-Curseforge
          path: NTNH-${{ github.event.inputs.release_version }}-Curseforge
          include-hidden-files: true
          compression-level: 0

      - name: Upload Modrinth Artifact
        if: github.event.inputs.curseforge == 'true' && github.event.inputs.output == 'artifact'
        uses: actions/upload-artifact@v4
        with:
          name: NTNH-${{ github.event.inputs.release_version }}-Modrinth
          path: NTNH-${{ github.event.inputs.release_version }}-Modrinth.mrpack
          include-hidden-files: true
          compression-level: 0

      - name: Zip Files
        if: github.event.inputs.output == 'release'
        continue-on-error: true
        run: |
          zip -r "NTNH-${{ github.event.inputs.release_version }}-lwjgl3ify.zip" modpack-lwjgl3ify/
          zip -r "NTNH-${{ github.event.inputs.release_version }}-Prism.zip" modpack-prism/

      - name: Create GitHub Release
        if: github.ref_type == 'tag' && github.event.inputs.output == 'release'
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.event.inputs.release_version }}
          tag_name: ${{ github.event.inputs.release_version }}
          body: ${{ github.event.inputs.changelog }}
          token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          files: |
            NTNH-${{ github.event.inputs.release_version }}-lwjgl3ify.zip
            NTNH-${{ github.event.inputs.release_version }}-Prism.zip
            NTNH-${{ github.event.inputs.release_version }}-Curseforge.zip
            NTNH-${{ github.event.inputs.release_version }}-Modrinth.mrpack
