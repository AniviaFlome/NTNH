name: Build NTNH Packages

on:
  workflow_dispatch:
    inputs:
      branch:
        type: choice
        required: true
        description: "Which branch you want to build?"
        options:
          - "main"
          - "twopointzero"
      output:
        type: choice
        required: true
        description: "Which one do you want to build?"
        options:
          - "artifact"
          - "release"
      lwjgl3ify:
        description: 'Do you want to build lwjfl3ify package?'
        required: true
        type: boolean
        default: true
      prism:
        description: 'Do you want to build prism package?'
        required: true
        type: boolean
        default: true
      native:
        description: 'Do you want to build native package?'
        required: true
        type: boolean
        default: true
      release_version:
        description: 'Release Version'
        required: true
        type: string

env:
  instance.cfg: |
    [General]
    name=NTNH-${{ github.event.inputs.release_version }
    iconKey=default
    InstanceType=OneSix
  mmc-pack.json: |
    {
        "components": [
            {
                "important": true,
                "uid": "net.minecraft",
                "version": "1.7.10"
            },
            {
                "uid": "net.minecraftforge",
                "version": "10.13.4.1614"
            }
        ],
        "formatVersion": 1
    }

jobs:
  package:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: ntnh
          ref: ${{ github.event.inputs.branch }}

      - name: Run lwjgl3ify Script
        if: github.event.inputs.lwjgl3ify == 'true'
        run: |
          version=$(curl -s https://api.github.com/repos/GTNewHorizons/lwjgl3ify/releases/latest | jq -r .tag_name)
          zip_url="https://github.com/GTNewHorizons/lwjgl3ify/releases/download/$version/lwjgl3ify-${version}-multimc.zip"
          jar_url="https://github.com/GTNewHorizons/lwjgl3ify/releases/download/$version/lwjgl3ify-${version}.jar"

          curl -L "$zip_url" -o "lwjgl3ify-${version}-multimc.zip"
          unzip -q "lwjgl3ify-${version}-multimc.zip" -d lwjgl3ify-multimc
          curl -L "$jar_url" -o "lwjgl3ify-${version}.jar"

          mkdir -p modpack-lwjgl3ify/.minecraft/mods
          cp -r ntnh/* modpack-lwjgl3ify/.minecraft/

          cat > modpack-prism/instance.cfg <<< "${{ github.event.inputs.instance.cfg }}"
          cat > modpack-prism/mmc-pack.json <<< "${{ github.event.inputs.mmc-pack.json }}"

          cp -r lwjgl3ify-multimc/patches modpack-lwjgl3ify/
          cp -r lwjgl3ify-multimc/libraries modpack-lwjgl3ify/
          cp -r lwjgl3ify-multimc/mmc-pack.json modpack-lwjgl3ify/
          cp -r "lwjgl3ify-${version}.jar" modpack-lwjgl3ify/.minecraft/mods/

      - name: Run Prism Script
        if: github.event.inputs.prism == 'true'
        run: |
          mkdir -p modpack-prism/.minecraft
          cp -r ntnh/* modpack-prism/.minecraft/

          cat > modpack-prism/instance.cfg <<< "${{ github.event.inputs.instance.cfg }}"
          cat > modpack-prism/mmc-pack.json <<< "${{ github.event.inputs.mmc-pack.json }}"

      - name: Run Native Script
        if: github.event.inputs.native == 'true'
        run: |
          mkdir -p modpack-native
          cp -r ntnh/* modpack-native

      - name: Upload lwjgl3ify Artifact
        if: github.event.inputs.lwjgl3ify == 'true' && github.event.inputs.output == 'artifact'
        uses: actions/upload-artifact@v4
        with:
          name: NTNH-${{ github.event.inputs.release_version }}-lwjgl3ify
          path: modpack-lwjgl3ify
          include-hidden-files: true

      - name: Upload Prism Artifact
        if: github.event.inputs.prism == 'true' && github.event.inputs.output == 'artifact'
        uses: actions/upload-artifact@v4
        with:
          name: NTNH-${{ github.event.inputs.release_version }}-MMC_Prism
          path: modpack-prism
          include-hidden-files: true

      - name: Upload Native Artifact
        if: github.event.inputs.native == 'true' && github.event.inputs.output == 'artifact'
        uses: actions/upload-artifact@v4
        with:
          name: NTNH-${{ github.event.inputs.release_version }}-Native
          path: modpack-native
          include-hidden-files: true

      - name: Zip Files
        if: github.event.inputs.output == 'release'
        continue-on-error: true
        run: |
          zip -r "NTNH-${{ github.event.inputs.release_version }}-lwjgl3ify.zip" ntnh/modpack-lwjgl3ify/
          zip -r "NTNH-${{ github.event.inputs.release_version }}-Prism.zip" ntnh/modpack-prism/
          zip -r "NTNH-${{ github.event.inputs.release_version }}-Native.zip" ntnh/modpack-native/

      - name: Create GitHub Release
        if: github.ref_type == 'tag' && github.event.inputs.output == 'release'
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ github.event.inputs.release_version }}
          tag_name: ${{ github.event.inputs.release_version }}
          body: ${{ github.event.inputs.changelog }}
          token: ${{ secrets.RELEASE_GITHUB_TOKEN }}
          files: |
            NTNH-${{ github.event.inputs.release_version }}-lwjgl3ify.zip
            NTNH-${{ github.event.inputs.release_version }}-Prism.zip
            NTNH-${{ github.event.inputs.release_version }}-Native.zip
